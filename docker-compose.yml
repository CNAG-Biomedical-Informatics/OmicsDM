version: '3.9'

services:
  api:
    build:
      context: ./scdm_server
      # target: dev
      args:
        - IGNORE_CACHE_FROM_HERE=${IGNORE_CACHE_FROM_HERE}
    depends_on:
      - api-db
    # ports:
    #   - 8083:8083
    env_file:
      - .env
    tty: true
    volumes:
      - type: bind
        source: /etc/kubernetes/pki/ca.crt
        target: /home/.kube/ca.crt

      - type: bind 
        source: ./scdm_server/server/config/config.py
        target: /usr/src/app/server/config/config.py

    command: [ sh, compose_server.sh ]
    networks:
      - api-nw
      - devops_vm_reverseproxy-nw

  api-db:
    image: postgres:13-alpine
    volumes:
      - postgres-data-scdm:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${API_DB}
      - POSTGRES_USER=${API_DB_USER}
      - POSTGRES_PASSWORD=${API_DB_PW}
    networks:
      - api-nw

  client:
    build:
      context: ./scdm_client
      args:
        - IGNORE_CACHE_FROM_HERE=${IGNORE_CACHE_FROM_HERE}
    depends_on:
      - api
    volumes:
      - ./scdm_client/config.js:/usr/share/nginx/html/config.js
      - ./nginx_mountpoint/logs:/var/log/nginx
      - ./nginx_mountpoint/templates:/etc/nginx/templates:ro
      - ./nginx_mountpoint/includes:/etc/nginx/includes:ro
      #- ./nginx_mountpoint/certs/scdm.cnag.dev.pem:/etc/nginx/scdm.cnag.dev.pem:ro
      #- ./nginx_mountpoint/certs/scdm.cnag.dev-key.pem:/etc/nginx/scdm.cnag.dev-key.pem:ro
    environment:
      NODE_ENV: production
    networks:
      - devops_vm_reverseproxy-nw
    tty: true
    
volumes:
  postgres-data-scdm:

networks:
  devops_vm_reverseproxy-nw:
    external: true
  api-nw: