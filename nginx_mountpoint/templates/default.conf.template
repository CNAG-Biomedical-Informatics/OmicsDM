server {
    listen 443 ssl; # For IPv4 addresses
    listen [::]:443 ssl; # For IPv6 addresses
    ssl_certificate       /etc/nginx/omicsdm.cnag.dev.pem;
    ssl_certificate_key   /etc/nginx/omicsdm.cnag.dev-key.pem;

    listen 80;
    access_log  /var/log/nginx/http.access.log;
    server_name omicsdm.cnag.dev;

    location /portal {   
        access_log  /var/log/nginx/http.access.log;
        error_log  /var/log/nginx/http.error.log;

        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html =404;
    }

    location /api/ {
        # This is the maximum size of the file that can be uploaded
        # todo throw an error on the client side if the file is too big
        # todo make this more specific by defining exactly which url this should apply to
        client_max_body_size 150M;

        access_log /var/log/nginx/api.access.log;
        error_log /var/log/nginx/api.error.log;
        proxy_pass http://api-omicsdm:8083/api/;
        include includes/proxy-set-header.conf;
    }

    location /doc/ {
        access_log /var/log/nginx/doc.access.log;
        error_log /var/log/nginx/doc.error.log;
        proxy_pass http://api-omicsdm:8083/doc/;
        include includes/proxy-set-header.conf;
    }

    location /swaggerui/ {
        access_log /var/log/nginx/swaggerui.access.log;
        error_log /var/log/nginx/swaggerui.error.log;
        proxy_pass http://api-omicsdm:8083/swaggerui/;
        include includes/proxy-set-header.conf;
    }
    
    location /swagger.json {
        access_log /var/log/nginx/swaggerjson.access.log;
        error_log /var/log/nginx/swaggerjson.error.log;
        proxy_pass http://api-omicsdm:8083/swagger.json;
        include includes/proxy-set-header.conf;
    }

    location /auth/ {
        access_log /var/log/nginx/kc.access.log;
        error_log /var/log/nginx/kc.error.log;

        proxy_pass http://keycloak:8080/;
        include includes/proxy-set-header.conf;
    }

    location /auth/admin/ {
        access_log /var/log/nginx/kc.access.log;
        error_log /var/log/nginx/kc.error.log;

        proxy_pass http://keycloak:8080/admin/;
        include includes/proxy-set-header.conf;
    }

    location /auth/js/ {
        access_log /var/log/nginx/kc_js.access.log;
        error_log /var/log/nginx/kc_js.error.log;

        proxy_pass http://keycloak:8080/js/;
        include includes/proxy-set-header.conf;
    }

    location /auth/resources/ {
        access_log /var/log/nginx/kc_res.access.log;
        error_log /var/log/nginx/kc_res.error.log;

        proxy_pass http://keycloak:8080/resources/;
        include includes/proxy-set-header.conf;
    }

    location /auth/realms/ {
        access_log /var/log/nginx/kc_realms.access.log;
        error_log /var/log/nginx/kc_realms.error.log;

        proxy_pass http://keycloak:8080/realms/;
        include includes/proxy-set-header.conf;

        # needed for user creation
        proxy_buffer_size 64k;
        proxy_buffers 8 64k;
        proxy_busy_buffers_size 64k;
    }

    location /auth/health/ {
        access_log /var/log/nginx/kc_health.access.log;
        error_log /var/log/nginx/kc_health.error.log;

        proxy_pass http://keycloak:8080/health/;
        include includes/proxy-set-header.conf;
    }

    location /bucketdevel3tropal/{
        access_log /var/log/nginx/bucketdevel3tropal.access.log;
        error_log /var/log/nginx/bucketdevel3tropal.error.log;

        # This is the maximum size of the file that can be uploaded
        # todo throw an error on the client side if the file is too big
        client_max_body_size 1G;
 
        # the URL has to be hardcoded if ceph:8000 is used
        # CEPH mistakenly assumes that the bucket name ceph
        # proxy_pass_request_headers off;
        # include includes/proxy-set-header.conf;
        proxy_pass http://172.16.10.100:9095/bucketdevel3tropal/;
        #proxy_pass http://localstack:4566/bucketdevelomicsdmcellxgene/;
    }
    
    location / {
    	access_log /var/log/nginx/shinyproxy.access.log;
   	error_log /var/log/nginx/shinyproxy.error.log;

    	proxy_pass http://shinyproxy:8080/;

    	proxy_http_version 1.1;
    	proxy_set_header Upgrade $http_upgrade;
    	proxy_set_header Connection "upgrade";
    	proxy_read_timeout 600s;

    	proxy_redirect    off;
    	proxy_set_header  Host              $http_host;
    	proxy_set_header  X-Real-IP         $remote_addr;
    	proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    	proxy_set_header  X-Forwarded-Proto $scheme;
  }

  location /login {
    	access_log /var/log/nginx/shinyproxy-login.access.log;
    	error_log /var/log/nginx/shinyproxy-login.error.log;

    	proxy_pass http://shinyproxy:8080/login;

    	proxy_http_version 1.1;
    	proxy_set_header Upgrade $http_upgrade;
    	proxy_set_header Connection "upgrade";
    	proxy_read_timeout 600s;

    	proxy_redirect    off;
    	proxy_set_header  Host              $http_host;
    	proxy_set_header  X-Real-IP         $remote_addr;
    	proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    	proxy_set_header  X-Forwarded-Proto $scheme;
  }

  location /oauth2/authorization/shinyproxy {
    access_log /var/log/nginx/shinyproxy-oauth2.access.log;
    error_log /var/log/nginx/shinyproxy-oauth2.error.log;

    proxy_pass http://shinyproxy:8080/oauth2/authorization/shinyproxy;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 600s;

    proxy_redirect    off;
    proxy_set_header  Host              $http_host;
    proxy_set_header  X-Real-IP         $remote_addr;
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
  }

  location /auth-error {
    access_log /var/log/nginx/shinyproxy-auth-error.access.log;
    error_log /var/log/nginx/shinyproxy-auth-error.error.log;

    proxy_pass http://shinyproxy:8080/auth-error;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 600s;

    proxy_redirect    off;
    proxy_set_header  Host              $http_host;
    proxy_set_header  X-Real-IP         $remote_addr;
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
  }

  location /auth-success {
    access_log /var/log/nginx/shinyproxy-auth-success.access.log;
    error_log /var/log/nginx/shinyproxy-auth-success.error.log;

    proxy_pass http://shinyproxy:8080/auth-success;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 600s;

    proxy_redirect    off;
    proxy_set_header  Host              $http_host;
    proxy_set_header  X-Real-IP         $remote_addr;
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
  }
 
  location /app {
    access_log /var/log/nginx/shinyproxy-app.access.log;
    error_log /var/log/nginx/shinyproxy-app.error.log;

    proxy_pass http://shinyproxy:8080/app;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 600s;

    proxy_redirect    off;
    proxy_set_header  Host              $http_host;
    proxy_set_header  X-Real-IP         $remote_addr;
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
  }
}
